#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>

void sender()
{
  MPI_Barrier(MPI_COMM_WORLD)

}

void reciever()
{
  MPI_Barrier(MPI_COMM_WORLD) 
}

void send_single()
{
  
}





int main(int argc, char** argv) {
  MPI_Init(NULL, NULL);
  int world_rank;
  MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);
  int world_size;
  MPI_Comm_size(MPI_COMM_WORLD, &world_size);
  // We are assuming at least 2 processes for this task
  if (world_size < 2) {
    fprintf(stderr, "World size must be greater than 1 for %s\n", argv[0]);
    MPI_Abort(MPI_COMM_WORLD, 1); 
  }
  if (world_rank == 0) {
    sender();
  } else if (world_rank == 1) {
    reciever();
  }
  MPI_Finalize();
}
